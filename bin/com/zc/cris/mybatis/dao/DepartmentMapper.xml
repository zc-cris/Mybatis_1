<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 名称空间为接口的全类名 -->
<mapper namespace="com.zc.cris.mybatis.dao.DepartmentMapper">
	
	
	<!--
		 使用分步查询 
		 	拓展：如果要将第一次查询的值中的多列值传入到第二次查询的参数中，可以将多列的值封装成map传递过去
		 	如果在全局配置懒加载的情况下，如果当前某次查询需要立即执行，也可以设置 fetchType=eager
	-->
	<resultMap type="com.zc.cris.mybatis.bean.Department" id="MyDeptStep">
		<id column="id" property="id"/>
		<result column="name" property="name"/>
		<collection property="employees" 
		select="com.zc.cris.mybatis.dao.EmployeeMapper.findEmpByDeptId" column="{deptId=id}"
		fetchType="lazy">
		</collection>
	</resultMap>
	<!-- public Department findDeptAndEmpByIdStep(Integer id); -->
	<select id="findDeptAndEmpByIdStep" resultMap="MyDeptStep">
		select id,name from tb_dept where id = #{id}
	</select>
	
	
	
	
	<resultMap type="com.zc.cris.mybatis.bean.Department" id="MyDept">
		<id column="did" property="id"/>
		<result column="dname" property="name"/>
		<!-- 
			如果级联属性为Collection 类型的话。就需要使用 collection 标签来进行嵌套结果集的联合查询
				collection:指定级联属性的类型
				ofType：指定集合里面元素的类型	
		 -->
		<collection property="employees" ofType="com.zc.cris.mybatis.bean.Employee">
			<!-- 定义集合中元素的封装规则 -->
			<id column="eid" property="id"/>
			<result column="ename" property="name"/>
			<result column="email" property="email"/>
			<result column="gender" property="gender"/>
		</collection>
	</resultMap>
	<!-- public Department findDeptAndEmpById(Integer id); -->
	<select id="findDeptAndEmpById" resultMap="MyDept">
		select e.id eid, e.name ename, e.email, e.gender, d.id did, d.name dname  
		from tb_dept d left join tb_employee e 
		on e.dept_id = d.id where d.id = #{id} 
	</select>
	
	
	<!-- public Department findDeptById(Integer id); -->
	<select id="findDeptById" resultType="com.zc.cris.mybatis.bean.Department">
		select id,name from tb_dept where id = #{id}
	</select>

</mapper>